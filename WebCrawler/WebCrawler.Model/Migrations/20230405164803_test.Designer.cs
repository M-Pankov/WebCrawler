// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebCrawler.Model;

#nullable disable

namespace WebCrawler.Model.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230405164803_test")]
    partial class test
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("WebCrawler.Model.SiteCrawlResult", b =>
                {
                    b.Property<int>("SiteCrawlResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CrawlDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("date('now')");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SiteCrawlResultId");

                    b.ToTable("SiteCrawlResults");
                });

            modelBuilder.Entity("WebCrawler.Model.UrlCrawlResult", b =>
                {
                    b.Property<int>("CrawledUrlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ResponseTimeMs")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SiteCrawlResultId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UrlFoundLocation")
                        .HasColumnType("INTEGER");

                    b.HasKey("CrawledUrlId");

                    b.HasIndex("SiteCrawlResultId");

                    b.ToTable("UrlCrawlResults");
                });

            modelBuilder.Entity("WebCrawler.Model.UrlCrawlResult", b =>
                {
                    b.HasOne("WebCrawler.Model.SiteCrawlResult", "SiteCrawlResult")
                        .WithMany("CrawledUrls")
                        .HasForeignKey("SiteCrawlResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SiteCrawlResult");
                });

            modelBuilder.Entity("WebCrawler.Model.SiteCrawlResult", b =>
                {
                    b.Navigation("CrawledUrls");
                });
#pragma warning restore 612, 618
        }
    }
}
